[project]
name = "partial-json-parser"
version = "0.2.1.1"
description = "Parse partial JSON generated by LLM"
authors = [{ name = "Muspi Merol", email = "me@promplate.dev" }]
optional-dependencies = { playground = ["rich"] }
requires-python = ">=3.8" # 3.6 in production indeed
readme = "README.md"
license = { text = "MIT" }
scripts = { json-playground = "partial_json_parser.playground:main" }
keywords = ["JSON", "parser", "LLM", "nlp"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
]

[project.urls]
repository = "https://github.com/promplate/partial-json-parser"
homepage = "https://promplate.dev/partial-json-parser"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.build]
source-includes = ["src/partial_json_parser"]

[tool.pdm.dev-dependencies]
dev = [
    "isort>=5.12.0",
    "black>=23.10.0",
    "hypothesis>=6.88.1",
    "tqdm>=4.66.1",
    "pytest>=7.4.2",
]

[tool.pdm.scripts]
test-performance = { call = "tests.test_performance:main" }
test-hypotheses = { call = "tests.test_hypotheses:main" }
test-examples = "pytest tests/test_examples.py"
test = { composite = ["test-examples", "test-hypotheses", "test-performance"] }
format = { composite = ["isort ./{args}", "black ./{args}"] }
playground = { call = "partial_json_parser.playground:main" }
pre_build = { composite = ["format", "git stash", "python src/overrides.py"] }
post_build = { cmd = ["git", "stash", "pop"] }


[tool.black]
line-length = 160

[tool.isort]
profile = "black"

[tool.pyright]
reportPossiblyUnboundVariable = false
